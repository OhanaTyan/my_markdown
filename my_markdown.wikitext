= my_markdown语法 =
这个文档主要介绍my_markdown的语法。为了区分，此文档部分内容为了方便阅读，用<code>%</code>代替空格
在标题上标记#的内容表示已经实现，而无标记的内容表示未实现
<pre>
<nowiki>
== #已实现功能 ==
== 未实现功能 ==
</nowiki>
</pre>

=== 一些术语解释 ===
一个缩进：一个tab，或两个或4个空格

== 标题  ==
在原版markdown中，标题有两种格式<ref>https://www.runoob.com/markdown/md-title.html</ref>

第一种
<pre>
这是一级标题
==================
这是二级标题
------------------
</pre>

第二种
<pre>
# 一级标题
## 二级标题
### 三级标题
#### 四级标题
</pre>

在my_markdown中，只支持第二种。解析器在解析的时候，会忽略在<code>#</code>号后面的空格。也就是说，下面的两种表示等价

<pre>
## 二级标题
##二级标题
</pre>

== 段落 ==
my_markdown对于段落的处理与markdown相同
<pre>
我是第一个段落的第一段
我是第一个段落的第二段

我是第二个段落的第一段
我是第二个段落的第二段
</pre>
<pre>
我是第一个段落

我是第二个段落
</pre>

<pre>
我是第一段
%
我是第三段。第二段的位置被空出来了
</pre>

=== 分隔线 ===
仅支持下面一种分隔线
<pre>
---
---这是一条分隔线
---这里无论是什么文字
---这四行的处理结果都是相同的
</pre>
分隔线由3个减号作为前缀，其后可以是任意字符

=== 字体 ===
仅支持下面的方式标记字体。这种处理方式混合了markdown和wikitext的语法
<pre>
*斜体文本*
'''粗体文本'''
*这里是斜体'''这里既是斜体也是粗体'''这里是斜体*
'''这里是粗体*这里既是粗体也是斜体*这里是粗体'''
*'''这里既是粗体也是斜体'''*
'''*这里既是粗体也是斜体*'''
</pre>
下面是错误示例，这种示例会报错
<pre>
*这里是斜体文本'''这里的文本既是粗体也是斜体*这里是粗体文本'''
<pre>
需要注意，字体标记不支持换行。下面的两种表示都会报错
<pre>
'''文本1
文本2'''文本3
</pre>
显示效果如下
<pre>
黑体文本1
普通文本2 黑体文本3
</pre>
=== 删除线 ===
使用下面这种方法
<pre>
~~这里是被删除线划掉的文本~~
</pre>

=== 脚注 ===
还没打算做

=== 转义 ===
<pre>
\*这里不会被显示为斜体\*
\\
</pre>
显示效果如下
<pre>
*这里不会被显示为斜体
\
</pre>

== 列表 ==
<!--仅支持用加号和减号作为列表的开头-->
<!-- 因为如果星号可以支持好几个功能的话，有些难做，所以懒得做了 -->
可以使用星号、加号和减号作为列表的开头（前缀）
<pre>
* 第一个列表的第一项
*第二项，星号后面不加空格也可以
* 第三项，加空格和不加空格效果相同
- 第四项，星号和减号可以混用

+ 第二个列表第一项
+第二项
</pre>
以星号和减号作为列表开头的列表是无序列表，以加号作为开头的是有序列表


但多级列表支持用星号或加号开头。与传统markdown不同的是，多级列表中相邻的两个型号之间不加星号
<pre>
* 无序一级列表
** 无序二级列表
**+ 有序三级列表
**+ 有序三级列表
* * 错误的
</pre>

列表是无序还是有序仅由同等级列表的第一项的前缀决定
<pre>
* 这是一个无序列表
+ 这是这个无序列表的第二项
+ 即使这一项的前缀是加号
+ 但还是会被处理为无序列表
*+ 这是这个无序列表第四项的子列表第一个子项
*+ 这个子列表是一个有序列表
</pre>


== 区块 ==
区块有两种，第一种是markdown风格，在段落开头使用<code>></code>大于号，表示缩进效果
<pre>
> 第一层缩进
>> 第二层缩进
>>> 第三层缩进
> > > 错误写法
</pre>
需要注意，原版markdown中多层缩进中两个相邻的大于号之间需要加一个空格，而在my_markdown中不应该加空格
markdown风格中，最前面连续的大于号序列后面是否加空格会影响页面效果，如下
<pre>
> 1_默认展开
>> 内容1
>2_默认不展开
>> 内容2
</pre>

第二种是萌百风格，一个半角冒号<code>:</code>表示缩进
<pre>
: 第一层缩进
:: 第二层缩进
::: 第三层缩进
</pre>

== 代码与代码块 ==
使用反引号<code>``</code>可以把代码块括起来
<pre>
在C语言中，`printf()`函数是一个常用的函数
</pre>
可以用下面的方法创建一个代码块。暂时还不支持代码块高亮
<pre>
<nowiki>
```
#include <stdio.h>
#include <stdlib.h>

int main(){
	printf("hello world\n");
	fflush(stdout);		// 如果在一些设备上没有打印出来字符串则加上这句
	getchar();			// 如果在一些设备上闪退则加上这句
	return 0;
}
```写在这里的内容会被忽略
</nowiki>
</pre>

== 超链接 ==
下面的方式均可以创建超链接
<pre>
[链接地址]
[[链接地址]]
[链接地址 | 链接名称]
[[链接地址 | 链接名称]]
</pre>
需要注意，my_markdown不支持这种语法
<pre>
<链接地址>
[链接名称](链接地址)
</pre>
并且管道符号左右必须都有一个空格

== 图片 ==
不打算做。未来可能打算做成像萌百的形式

== regex公式 ==
不打算做

== 表格 ==
不打算做

== 模板 ==
可以像使用萌百的模板一样调用模板







